<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cms.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAIAAAAEAAArBiQkJAYcHBwIGhoaChcXFwoUFAAMAAAAEAAAEBAQEBAQKysrEicn
        JwwnFCcMFCcnDCIzMw4kNzcOFy4uCi4uLgozMzMKKysrDCcnFAwzMxoKQEBABAAAAAQAAAACAAAAAgAA
        AAAAAAAAAAAAAAAAAAIAAAAGAAAAChISEg4ODhwSDBcXFhISEhwPDw8iDAwMKgYGBi4LBgYuCwYLLAwM
        ESwSGBgqEhIYKhISGCoZGRkoExMaKBoUFCYcHBUkFRwVJB4XHiIfHx8gEREaHhQUFBoWFhYWGhoaFCQk
        JA4uFxcKAAAABgAAAAIAAAAAAAAABAAAAAoNDQ0SFBQUGBEaGh4NGhomBRQPMgkNCTgIDARCCwsHRgoK
        CkgKCgpIBwcHRAsLC0YHCwtECAgLRAwMCEAIDAhCCAsIRAwMDEINDQk8Dg4OOA8PDzIVCxAwFwYXLB0P
        FiIbEhIcFBQUGg4cABIUFBQMAAAACAAAAAIAAAAIAAAADgAAABYICAgeCA8PIgcUFCYKCgoyBAgEQgQE
        BEgDAwNKAwcDTgMGBk4DBwNKBAQESAcHB0gEBARIBAQERgMDA0wDAwNSAwcDTAQEBEgIBAhECQkJPAoP
        BTIMBgwqGQgZHhULFRgMDAwUABsAEhAQEBAAAAAIAAAABAAAAAYAAAAMAAAAFAAACxi9w8V80trb4djh
        4v/Y4eL/2OHi/9fg4f/X4OH/2N7h/9bf4P/W3+D/1d3f/9Xd4P/X3eD/197g/9Td3v/U3d//09zd/9Pc
        3f/T3N3/09zd/9Pc3f/T3N3/1tzd/8/Y2d3DysxqAAAABgAAAAgAAAAEAAAAAgAAAAYAAAAKy9PTftff
        4P/W3uD/1t7g/9Xd3//W3d//1d3f/9jd3//U3d7/1dzd/9Pc3f/T3N3/09zd/9Pb3P/T29z/09vc/9Pb
        3P/V2tz/0trb/9La2//T2dv/0trb/9HZ2//R2dv/0dnb/9LZ2//R2tp0AAAAAAAAAAIAAAAAAAAAAgAA
        AADZ4OL719/g/9ff4P/X3+D/2uHj/73Fxf+4vr//t76+/7e+vv+2vb//tr2//7e8vv+1vL7/tby+/7e8
        vv+1u73/tbu9/7W7vf+1u73/tbu8/7W7vP+9xMb/1N3e/9La2//S2tv/0trb/9bc3vMAAAAAAAAAAAAA
        AAAAAAAAv7+/CNjg4f/X3+D/2ODh/6KoqP8hIiL/CwsL/wsLC/8LCwv/CwsL/wsLC/8LCwv/CwsL/wsL
        C/8LCwv/CwsL/wsLC/8LCwv/CwsL/wsLC/8LCwv/CwsL/wsLC/8mKCj/rbOz/9Tb3P/U3N3/09zd/wAA
        AAAAAAAAAAAAAAAAAAC229sG2ODh/9jg4f/M0tP/KCgo/yAgIP8YGBj/EhIS/w0NDf8NDQ3/DQ0N/w0N
        Df8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8dHh7/0trb/9fd
        3//Y3uD/AAAAAAAAAAAAAAAAAAAAALbb2wbY4OH/2OHi/7K5uv8ZGBj/ISEh/yQkJP8gICD/GBgY/xIS
        Ev8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/wsL
        C//Axsb/2ODh/9ni4/8AAAAAAAAAAAAAAAAAAAAAttvbBtjh4v/b4eP/s7i6/wMDA/8NDQ3/GRkZ/yEh
        If8kJCT/ICAg/xgYGP8SEhL/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0N
        Df8NDQ3/CwsL/7/Gxv/b4uT/2+Pl/wAAAAAAAAAAAAAAAAAAAAC229sG2ODh/9jg4f+7wcL/Ojo6/wAA
        AP8DAwP/DQ0N/xkZGf8hISH/JCQk/yAgIP8YGBj/EhIS/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/w0N
        Df8NDQ3/DQ0N/w0NDf8LCwv/wsfJ/93m5//d5uf/AAAAAAAAAAAAAAAAAAAAALbb2wbZ4OH/2ODh/7vB
        w/9ERET/QEBA/zo6Ov8AAAD/AwMD/w0NDf8ZGRn/ISEh/yQkJP8gICD/GBgY/xISEv8NDQ3/DQ0N/w0N
        Df8NDQ3/DQ0N/w0NDf8NDQ3/DQ0N/wsLC//Dysv/3+fp/+Lo6f8AAAAAAAAAAAAAAAAAAAAAttvbBtff
        4P/X3+D/vMLD/0lJSf9ISEj/RUVF/0BAQP86Ojr/AAAA/wMDA/8NDQ3/GRgY/yEgIP8kIiT/IB4e/xgX
        Gf8SEhL/DQ0N/w0NDf8NDQ3/DQ0N/w0NDf8NDQ3/CwsL/8fMzv/i6+z/4urr/wAAAAAAAAAAAAAAAAAA
        AAC229sG19/g/9ff4P+6wcL/SEhI/0pKSv9KSkr/SEhI/0VFRf9AQED/Ojo6/wAAAP8A85b/APGU/wDy
        l/8A85n/APmb/yAeHv8YGBj/EhIS/w0NDf8NDQ3/DQ0N/w0NDf8LCwv/yc/R/+Ts7f/l7O3/AAAAAAAA
        AAAAAAAAAAAAALbb2wbW3uD/1t7g/7m/wP9AQED/RkZG/0lISv9KSUn/SklL/0hISP9FRUX/QT8//wD1
        mP8A85n/APmf/wD/qv8P/7b/ISAg/yQkJP8gICD/GBgY/xISEv8NDQ3/DQ0N/wsLC//M0tL/5+/x/+fv
        8f8AAAAAAAAAAAAAAAAAAAAAttvbBtfd3//W3uD/t77A/zk5Of83TEP/ANJ+/wDpi/8A0oL/RlhQ/0pK
        Sv9ISEj/RURE/0A/P/86OTn/AAAA/wMDA/8NDQ3/GRkZ/yEhIf8kJCT/ICAg/xgYGP8SEhL/CwsL/83T
        1f/r8fL/6fHy/wAAAAAAAAAAAAAAAAAAAAC229sG1d3f/9jd3/+3vb//OTk5/zo6Ov81SUH/ANOC/wDr
        j/8A14f/RVhQ/0pKSv9KSkr/SEhI/0VFRf9AQED/Ojo6/wAAAP8DAwP/DQ0N/xkZGf8hISH/JCQk/yAg
        IP8XFxf/0NbX/+vz9f/r8/X/AAAAAAAAAAAAAAAAAAAAALbb2wbV3d7/1d3f/7i9v/85OTn/Ojo6/zo6
        Ov81TEP/ANeI/wDwlv8A2or/QlZN/0lJSf9KSkr/SkpK/0hISP9FRUX/QEBA/zo6Ov8AAAD/AwMD/w0N
        Df8ZGRn/ISEh/yIiIv/T2dv/7vb3/+729/8AAAAAAAAAAAAAAAAAAAAAttvbBtbc3v/U3d7/try+/zk5
        Of86Ojr/Ojo6/zo5Ov8nf1z/APqg/wD/r/80rn7/QUBA/0ZGRv9JSUn/SkpK/0pKSv9ISEj/RUVF/0BA
        QP86Ojr/AAAA/wMDA/8NDQ3/GBgY/9Tb3P/v9/n/8ff5/wAAAAAAAAAAAAAAAAAAAAC229sG09zd/9fc
        3v+2vL7/OTk5/zo6Ov86OTr/K3RV/wD7pP8m/7z/QryU/zo5Of86Ojr/PDw8/0FBQf9GRkb/SUlJ/0pK
        Sv9KSkr/SEhI/0VFRf9AQED/Ojo6/wAAAP8DAwP/1dvc//L6+//x+fr/AAAAAAAAAAAAAAAAAAAAALbb
        2wbU3d7/1N3e/7a9v/85OTn/Ojo6/yt1Vv8A/aX/LP/A/0e8mf86OTn/Ojo6/zo6Ov86Ojr/Ojo6/zw8
        PP9BQUH/RkZG/0lJSf9KSkr/SkpK/0hISP9FRUX/QEBA/zk5Of/U2tv/8/v9//T7/P8AAAAAAAAAAAAA
        AAAAAAAAttvbBtXc3f/V3d//tr2//zk5Of83SEH/G7Z8/zLCiv9CpIb/Ojk5/zo6Ov86Ojr/Ojo6/zo6
        Ov86Ojr/Ojo6/zo6Ov88PDz/QUFB/0ZGRv9JSUn/SkpK/0pKSv9ISEj/RERE/+Dk4//2/v//9Pz9/wAA
        AAAAAAAAAAAAAAAAAAC229sG2N3f/9be4P/Bycr/OTk5/zo6Ov86OTn/Ojk5/zo5Of86Ojr/Ojo6/zo6
        Ov86Ojr/Ojo6/zo6Ov86Ojr/Ojo6/zo6Ov86Ojr/PDw8/0FBQf9GRkb/SUlJ/0pKSv9ISEj/7Ozs////
        ///5////AAAAAAAAAAAAAAAAAAAAALbb2wbV3d//19/g/9zi5P9iZGX/OTk5/zk5Of85OTn/OTk5/zk5
        Of85OTn/OTk5/zk5Of85OTn/OTk5/zk5Of85OTn/OTk5/zk5Of85OTn/OTk5/zs7O/9AQED/RUVF/4KC
        gv////////////////8AAAAAAAAAAAAAAAAAAAAAAAAAANnf4P/Y4eL/3ePl/9jh4v+an5//hIiJ/4aJ
        iv+Hiov/iIuM/4mMjf+Kjo7/jI6P/4yQkf+RkZH/kZGR/5GRkf+RkZH/kZGR/5GRkf+RkZH/kZGR/5CQ
        kP+4uLj/+/v7/////////////////wAAAAAAAAAAAAAAAAAAAAAAAAAA2+Djxdvj5f/e5OX/3ubo/+Pq
        6//k7O3/5u/w/+nx8v/r8/T/7vX2/+/3+P/y+fr/8/v8//z/////////////////////////////////
        ///////////////////////////////////////DAAAAAAAAAAAAAAAAAAAAAAAAAADT3t4W3eXm597m
        6P/h6er/4uvs/+Ts7f/m7/D/6vHy/+vz9P/s9Pb/8Pb3/+/3+f/z+vv/+///////////////////////
        ////////////////////////////////////////////4f///xoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3+bpUOHo6GTj6+tk4+vtZObt8GTo8PBk6/DyZOvy9WTt9fVk7fX3ZPL6+mT6//9k////ZP//
        /2T///9k////ZP///2T///9k////ZP///2T///9k////ZP///1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////gAAA/wAAAH4AAAA+AAAAPgAAAD4AAAA+AA
        AAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AA
        AAPgAAAD8AAAB/////////////////////8=
</value>
  </data>
</root>