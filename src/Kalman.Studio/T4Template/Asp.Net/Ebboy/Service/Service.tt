<#@ template language="C#" hostSpecific="true" debug="false" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.Common" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Collections.Specialized" #>
<#@ import namespace="Kalman" #>
<#@ import namespace="Kalman.Extensions" #>
<#@ import namespace="Kalman.Data" #>
<#@ import namespace="Kalman.Data.SchemaObject" #>
<#@ import namespace="Kalman.Data.DbSchemaProvider" #>
<#@ import namespace="Kalman.Data.DbProvider" #>
<#@ import namespace="Kalman.Utilities" #>
<#@ import namespace="Kalman.Studio.T4TemplateEngineHost" #>

<# 
	TableHost host = (TableHost)(Host); 
	SOTable table = host.Table;
	List<SOColumn> list = host.ColumnList;
	string nameSpace = host.GetString("NameSpace");
	string className = host.GetString("ClassName");
	if(string.IsNullOrEmpty(nameSpace))nameSpace = "Entity";
	if(string.IsNullOrEmpty(className))className = table.Name;
	string tableName  = table.Name.EndsWith("s") ?table.Name.TrimEnd('s') : table.Name.Trim();
#>
using Ebboy.Core.Data;
using Ebboy.Core.Domain;
using System.Linq;

namespace <#= nameSpace #>.Services
{
	/// <summary>
    /// <#= table.Comment == "" ? table.Name : table.Comment.Replace("\r\n"," ") #>
    /// </summary>
	public partial class <#= tableName #>Service: I<#= tableName #>Service
	{
		#region Fields
        private readonly IRepository<<#=tableName#>> _repository;
        #endregion

        #region Ctor
        public <#= tableName #>Service(IRepository<<#=tableName#>> repository)
        {
            _repository = repository;
        }
        #endregion

        #region Methods
        /// <summary>
        /// 添加
        /// </summary>
        /// <param name="model"></param>
        public virtual void Insert(<#=tableName#> model)
        {
            _repository.Insert(model);
        }

        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="model"></param>
        public virtual void Update(<#=tableName#> model)
        {
            _repository.Update(model);
        }

        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="model"></param>
        public virtual void Delete(int id)
        {
            _repository.Delete(GetById(id));
        }

        /// <summary>
        /// 获取实体
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public virtual <#=tableName#> GetById(int id)
        {
           return  _repository.GetById(id);
        }

        /// <summary>
        /// 获取所有信息
        /// </summary>
        /// <returns></returns>
        public virtual IQueryable<<#=tableName#>> GetAllList()
        {
            return _repository.Table;
        }
        #endregion
	}
}